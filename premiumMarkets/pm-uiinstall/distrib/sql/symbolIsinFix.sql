alter table PORTFOLIO drop FOREIGN KEY FK_PORTFOLIO_TO_SHARES;
alter table TREND_SUPPLEMENT drop FOREIGN KEY FK_TREND_SUPPLEMENT_TO_SHARES;
alter table USERS drop FOREIGN KEY FK_USER_TO_STOCK;
alter table PERF_SUPPLEMENT drop FOREIGN KEY FK_PERF_SUPPLEMENT_TO_PORTFOLIO;

delete from SHARES  where SYMBOL=ISIN and CATEGORY='DEFAULT_CATEGORY' and MARKETLISTPROVIDER not in ('NYSE','NASDAQ')  order by MARKETLISTPROVIDER;
delete from PORTFOLIO where symbol not in (select symbol from SHARES where PORTFOLIO.SYMBOL = SHARES.SYMBOL and PORTFOLIO.ISIN = SHARES.ISIN);

--run updateShareLists

--check
select * from SHARES  where SYMBOL=ISIN and CATEGORY='DEFAULT_CATEGORY' and MARKETLISTPROVIDER not in ('NYSE','NASDAQ')  order by MARKETLISTPROVIDER;


--update other tables
-- drop events keys ...
ALTER TABLE EVENTS  DROP INDEX EVENTS_ANAME;
ALTER TABLE EVENTS  DROP INDEX EVENTS_ANAME_DATE;
ALTER TABLE EVENTS  DROP INDEX EVENTS_ANAME_DATE_ID;
ALTER TABLE EVENTS  DROP INDEX EVENTS_STOCK_ANAME_TYPE_ID;
ALTER TABLE EVENTS  DROP INDEX EVENTS_STOCK_ANAME_DATE_TYPE;
ALTER TABLE EVENTS  DROP INDEX EVENTS_STOCK_ANAME_DATE_ID;
ALTER TABLE EVENTS  DROP PRIMARY KEY;
ALTER TABLE  EVENTS ADD INDEX TMP (`SYMBOL`);
update EVENTS join SHARES on EVENTS.SYMBOL = SHARES.SYMBOL set EVENTS.ISIN=SHARES.ISIN where EVENTS.ISIN <> SHARES.ISIN;
--- rebuild events keys ...
ALTER TABLE EVENTS  DROP INDEX TMP;
ALTER TABLE EVENTS  ADD PRIMARY KEY  (`SYMBOL`,`ISIN`,`ANALYSENAME`,`DATE`,`EVENTDEFID`,`EVENTDEFEXTENSION`);
ALTER TABLE EVENTS  ADD INDEX EVENTS_ANAME (`ANALYSENAME`);
ALTER TABLE EVENTS  ADD INDEX EVENTS_ANAME_DATE (`ANALYSENAME`,`DATE`);
ALTER TABLE EVENTS  ADD INDEX EVENTS_ANAME_DATE_ID (`ANALYSENAME`,`DATE`,`EVENTDEFID`);
ALTER TABLE EVENTS  ADD INDEX EVENTS_STOCK_ANAME_TYPE_ID (`SYMBOL`,`ISIN`,`ANALYSENAME`,`EVENTTYPE`,`EVENTDEFID`);
ALTER TABLE EVENTS  ADD INDEX EVENTS_STOCK_ANAME_DATE_TYPE (`SYMBOL`,`ISIN`,`ANALYSENAME`,`DATE`,`EVENTTYPE`);
ALTER TABLE EVENTS  ADD INDEX EVENTS_STOCK_ANAME_DATE_ID (`SYMBOL`,`ISIN`,`ANALYSENAME`,`DATE`,`EVENTDEFID`);

 -- drop quotations keys
ALTER TABLE QUOTATIONS DROP INDEX `SYMBOL_ISIN_INDEX`;
ALTER TABLE QUOTATIONS  DROP PRIMARY KEY;
ALTER TABLE  QUOTATIONS ADD INDEX TMP (`SYMBOL`);
 update QUOTATIONS join SHARES on QUOTATIONS.SYMBOL=SHARES.SYMBOL set QUOTATIONS.ISIN=SHARES.ISIN where QUOTATIONS.ISIN <> SHARES.ISIN;
 -- rebuild quotations keys
ALTER TABLE QUOTATIONS  DROP INDEX `TMP`;
ALTER TABLE QUOTATIONS ADD INDEX `SYMBOL_ISIN_INDEX` (`SYMBOL`,`ISIN`);
ALTER TABLE  QUOTATIONS ADD  PRIMARY KEY (`SYMBOL`,`ISIN`,`DATE`);
 
 update PERF_SUPPLEMENT join SHARES on PERF_SUPPLEMENT.SYMBOL=SHARES.SYMBOL set PERF_SUPPLEMENT.ISIN=SHARES.ISIN where PERF_SUPPLEMENT.ISIN <> SHARES.ISIN;
 update TREND_SUPPLEMENT join SHARES on TREND_SUPPLEMENT.SYMBOL=SHARES.SYMBOL set TREND_SUPPLEMENT.ISIN=SHARES.ISIN where TREND_SUPPLEMENT.ISIN <> SHARES.ISIN;
 update TUNEDCONF join SHARES on TUNEDCONF.SYMBOL=SHARES.SYMBOL set TUNEDCONF.ISIN=SHARES.ISIN where TUNEDCONF.ISIN <> SHARES.ISIN;
 update USERS join SHARES on USERS.SYMBOL=SHARES.SYMBOL set USERS.ISIN=SHARES.ISIN where USERS.ISIN <> SHARES.ISIN;
 
 --delete from PERF_SUPPLEMENT where PERF_SUPPLEMENT.SYMBOL not in (select SYMBOL from SHARES where PERF_SUPPLEMENT.SYMBOL = SHARES.SYMBOL);
ALTER TABLE  PERF_SUPPLEMENT  ADD CONSTRAINT `FK_PERF_SUPPLEMENT_TO_PORTFOLIO` FOREIGN KEY (`SYMBOL`, `ISIN`, `NAME`) REFERENCES `PORTFOLIO` (`SYMBOL`, `ISIN`, `NAME`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE  PORTFOLIO  ADD CONSTRAINT `FK_PORTFOLIO_TO_SHARES` FOREIGN KEY (`SYMBOL`, `ISIN`) REFERENCES `SHARES` (`SYMBOL`, `ISIN`) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE  TREND_SUPPLEMENT  ADD CONSTRAINT `FK_TREND_SUPPLEMENT_TO_SHARES` FOREIGN KEY (`SYMBOL`, `ISIN`) REFERENCES `SHARES` (`SYMBOL`, `ISIN`) ON DELETE NO ACTION ON UPDATE NO ACTION;
ALTER TABLE  USERS  ADD CONSTRAINT `FK_USER_TO_STOCK` FOREIGN KEY (`SYMBOL`, `ISIN`) REFERENCES `SHARES` (`SYMBOL`, `ISIN`) ON DELETE NO ACTION ON UPDATE NO ACTION;


 
