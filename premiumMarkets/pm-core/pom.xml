<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>premium-markets</artifactId>
		<groupId>com.finance.pm</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.finance.pm</groupId>
	<artifactId>pm-core</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>pm-core</name>
  <properties>
    <project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>
    <org.springframework.version>3.0.5.RELEASE</org.springframework.version>
	<test>false</test>
	<pm.buildtime>${timestamp}</pm.buildtime>
  </properties>
  <dependencies>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
			<version>3.5</version>
		</dependency>
	    <dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>tomcat</groupId>
			<artifactId>commons-logging</artifactId>
			<version>4.0.6</version>
		</dependency>
		
		<!--
			Core utilities used by other modules. Define this if you use Spring
			Utility APIs (org.springframework.core.*/org.springframework.util.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!--
			Expression Language (depends on core) Define this if you use Spring
			Expression APIs (org.springframework.expression.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!--
			Bean Factory and JavaBeans utilities (depends on core) Define this if
			you use Spring Bean APIs (org.springframework.beans.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!--
			Aspect Oriented Programming (AOP) Framework (depends on core, beans)
			Define this if you use Spring AOP APIs (org.springframework.aop.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!--
			Application Context (depends on core, expression, aop, beans) This is
			the central artifact for Spring's Dependency Injection Container and
			is generally always defined
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
			Various Application Context utilities, including EhCache, JavaMail,
			Quartz, and Freemarker integration Define this if you need any of
			these integrations
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context.support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!--
			Transaction Management Abstraction (depends on core, beans, aop,
			context) Define this if you use Spring Transactions or DAO Exception
			Hierarchy
			(org.springframework.transaction.*/org.springframework.dao.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.transaction</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!--
			JDBC Data Access Library (depends on core, beans, context,
			transaction) Define this if you use Spring's JdbcTemplate API
			(org.springframework.jdbc.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!--
			Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and
			iBatis. (depends on core, beans, context, transaction) Define this if
			you need ORM (org.springframework.orm.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!--
			Object-to-XML Mapping (OXM) abstraction and integration with JAXB,
			JiBX, Castor, XStream, and XML Beans. (depends on core, beans,
			context) Define this if you need OXM (org.springframework.oxm.*)
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.jms</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.instrument</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.aspects</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!--<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>com.springsource.org.aspectj.weaver</artifactId>
		    <version>1.6.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>com.springsource.org.aspectj.runtime</artifactId>
			<version>1.6.5.RELEASE</version>
		</dependency>-->
		
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>ta-lib</groupId>
			<artifactId>ta-lib</artifactId>
			<version>0.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.6.10.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.0.14</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.2.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>1.4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.jms</groupId>
			<artifactId>jms</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jtidy</groupId>
			<artifactId>jtidy</artifactId>
			<version>r938</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.2</version>
		</dependency>
  </dependencies>
  <build>
	<resources>
		<resource>
			<directory>src/main/resources</directory>
			<filtering>false</filtering>
			<excludes>
				<exclude>db.properties</exclude>
				<exclude>log4j.properties</exclude>
				<exclude>**/*pmsjava*.*</exclude>
				<exclude>**/*pmserror*.*</exclude>
				<exclude>pmsbuild.properties</exclude>
			</excludes>
		</resource>
		<resource>
			<directory>src/main/resources</directory>
			<filtering>true</filtering>
			<includes>
				<include>pmsbuild.properties</include>
			</includes>
		</resource>
	</resources>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.1</version>
			<configuration>
				<source>1.6</source>
				<target>1.6</target>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-source-plugin</artifactId>
			<version>2.1.2</version>
			<executions>
				<execution>
					<id>attach-sources</id>
					<phase>verify</phase>
					<goals>
						<goal>jar-no-fork</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		 <plugin>
	       <groupId>org.antlr</groupId>
	        <artifactId>antlr3-maven-plugin</artifactId>
	        <version>3.5</version>
	        <executions>
	          <execution>
	            <goals>
	              <goal>antlr</goal>
	            </goals>
	          </execution>
	        </executions>
	      </plugin>
	</plugins>
</build>
	<repositories>
		<repository>
			<id>maven2</id>
			<name>maven2</name>
			<url>http://repo2.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>google</id>
			<name>google</name>
			<url>http://google-gson.googlecode.com/svn/mavenrepo</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>EBR Spring Release Repository</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>EBR External Release Repository</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
		<repository>
			<id>mvn</id>
			<name>mvn</name>
			<url>http://mvnrepository.com/artifact</url>
		</repository>
	</repositories>
</project>
